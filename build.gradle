buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'eclipse'
    id 'idea'
}

version = "2.2.0"
description = "${project.name} build script"
group = "benjaminkomen"

sourceCompatibility = JavaVersion.VERSION_13
targetCompatibility = JavaVersion.VERSION_13

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

dependencies {
    api "com.google.code.gson:gson:2.8.6"
    api "com.squareup.okhttp3:okhttp:4.3.1"


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
//    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.3.2'

    testImplementation 'com.squareup.okhttp3:mockwebserver:4.2.2'
    api 'org.slf4j:slf4j-api:1.8.0-beta2'
    api 'org.slf4j:slf4j-log4j12:1.8.0-beta2'
    compileOnly 'org.projectlombok:lombok:1.18.4'
    annotationProcessor 'org.projectlombok:lombok:1.18.4'
}

test {
    useJUnitPlatform()
}


javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath

    options {
        setMemberLevel JavadocMemberLevel.PUBLIC
        setAuthor true

        links "https://docs.oracle.com/en/java/javase/13/docs/api/"
        links "https://square.github.io/okio/1.x/okio/"
        links "https://square.github.io/okhttp/3.x/okhttp/"
        links "https://fastily.org/jwiki/docs/gson/"

        // links "http://square.github.io/okhttp/3.x/mockwebserver/"
        // setOutputLevel JavadocOutputLevel.VERBOSE
    }
}


task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task packageJavadoc(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

wrapper {
    gradleVersion = '6.0.1'
}


publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/benjaminkomen/jwiki")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)

            artifact sourceJar {
                classifier "sources"
            }
            artifact packageJavadoc {
                classifier "javadoc"
            }

            groupId 'benjaminkomen'
            artifactId 'jwiki'
            version project.version

            pom {
                name = 'jwiki'
                description = 'A library for interacting with Wikia/MediaWiki'
                inceptionYear = '2014'
                url = 'https://github.com/benjaminkomen/jwiki'
                licenses {
                    license {
                        name = 'GNU General Public License, Version 3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.txt'
                        distribution = 'repo'
                    }
                }
            }
        }
    }
}
